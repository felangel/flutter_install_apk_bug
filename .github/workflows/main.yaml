name: ci

on: [push]

jobs:
  patch:
    strategy:
      fail-fast: false
      matrix:
        flutter-version: [3.24.2, 3.24.1]

    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: ðŸ“š Git Checkout
        uses: actions/checkout@v4

      - name: â˜• Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: ðŸŽ¯ Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ matrix.flutter-version }}
          cache: true

      # - name: ðŸ¤– AVD Cache
      #   uses: actions/cache@v4
      #   id: avd-cache
      #   with:
      #     path: |
      #       ~/.android/avd/*
      #       ~/.android/adb*
      #     key: avd-29

      # - name: ðŸ¤– Cache AVD Snapshot
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 29
      #     arch: x86_64
      #     force-avd-creation: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     disable-animations: false
      #     script: echo "Generated AVD Snapshot"

      # - name: ðŸ§ª Run Patch E2E Tests
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 29
      #     arch: x86_64
      #     script: |
      #       # Create a temporary directory
      #       TEMP_DIR=$(mktemp -d -t 'workspace-XXXXX')
      #       cd "$TEMP_DIR"

      #       # Create a new empty flutter project
      #       flutter create e2e_test --empty --platforms android

      #       ls -la

      #       cd e2e_test

      #       ls -la

      #       # Replace the contents of "lib/main.dart" with a single print statement.
      #       echo "void main() { print('hello world'); }" > lib/main.dart

      #       # Create a new release on Android
      #       flutter build appbundle --release

      #       # Download bundletool 1.17.1
      #       curl -L -o bundletool.jar https://github.com/google/bundletool/releases/download/1.17.1/bundletool-all-1.17.1.jar

      #       # Build a universal APK
      #       java -jar bundletool.jar build-apks --overwrite --bundle=build/app/outputs/bundle/release/app-release.aab --output=outputs/my_app.apks --mode=universal

      #       # Install the APK on a device
      #       java -jar bundletool.jar install-apks --allow-downgrade --apks=outputs/my_app.apks

      - name: Run Script
        run: |
          # Create a temporary directory            
          TEMP_DIR=$(mktemp -d -t 'workspace-XXXXX')
          cd "$TEMP_DIR"

          # Create a new empty flutter project
          flutter create e2e_test --empty --platforms android

          ls -la

          cd e2e_test

          ls -la

          # Replace the contents of "lib/main.dart" with a single print statement.
          echo "void main() { print('hello world'); }" > lib/main.dart

          # Create a new release on Android
          flutter build appbundle --release

          # Download bundletool 1.17.1
          curl -L -o bundletool.jar https://github.com/google/bundletool/releases/download/1.17.1/bundletool-all-1.17.1.jar

          # Build a universal APK
          java -jar bundletool.jar build-apks --overwrite --bundle=build/app/outputs/bundle/release/app-release.aab --output=outputs/my_app.apks --mode=universal

          # Install the APK on a device
          java -jar bundletool.jar install-apks --allow-downgrade --apks=outputs/my_app.apks
